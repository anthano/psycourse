# ======================================================================================
# Project metadata
# ======================================================================================

[project]
name = "psycourse_py"
description = "Template for reproducible research projects in economics"
requires-python = ">=3.11"
dynamic = ["version"]
keywords = [
    "Reproducible Research",
    "Economics",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
authors = [
    { name = "JANE DOE", email = "janedoe@example-university.com" },
]
maintainers = [
    { name = "JANE DOE", email = "janedoe@example-university.com" },
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "MIT"

[project.urls]
Changelog = "https://github.com/OpenSourceEconomics/econ-project-templates"
Documentation = "https://github.com/OpenSourceEconomics/econ-project-templates"
Github = "https://github.com/OpenSourceEconomics/econ-project-templates"
Tracker = "https://github.com/OpenSourceEconomics/econ-project-templates/issues"

# ======================================================================================
# Build system configuration
# ======================================================================================

[build-system]
requires = ["hatchling", "hatch_vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.vcs]
version-file = "src/psycourse_py/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["tests"]
only-packages = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

# ======================================================================================
# Pixi
# ======================================================================================
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]

[tool.pixi.dependencies]
python = "==3.12"
# Development dependencies
jupyterlab = "*"
pre-commit = "*"
# Language agnostic template project dependencies
pytask = ">=0.5.0"
pytest = "*"
# Python template project dependencies
statsmodels = "*"
numpy = "*"
pandas = ">=2.2"
plotly = ">=5.2.0,<6"
python-kaleido = ">=0.2.1,<0.3"
# R template project dependencies
pytask-r = ">=0.4.1"
pyreadr = "*"
r-plyr = "*"
r-precommit = "*"
r-yaml = "*"
r-forcats = "*"

[tool.pixi.pypi-dependencies]
pdbp = "*"
psycourse_py = {path = ".", editable = true}


# ======================================================================================
# Pytask configuration
# ======================================================================================

[tool.pytask.ini_options]
paths = ["./src/psycourse_py"]
pdbcls = "pdbp:Pdb"

# ======================================================================================
# Ruff configuration
# ======================================================================================

[tool.ruff]
target-version = "py312"
fix = true

[tool.ruff.lint]
select = [
  # isort
  "I",
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # pylint
  "PLE", "PLR", "PLW",
  # misc lints
  "PIE",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
]

extend-ignore = [
  # allow module import not at top of file, important for notebooks
  "E402",
  # do not assign a lambda expression, use a def
  "E731",
  # Too many arguments to function call
  "PLR0913",
  # Too many returns
  "PLR0911",
  # Too many branches
  "PLR0912",
  # Too many statements
  "PLR0915",
  # Magic number
  "PLR2004",
  # Consider `elif` instead of `else` then `if` to remove indentation level
  "PLR5501",
  # For calls to warnings.warn(): No explicit `stacklevel` keyword argument found
  "B028",
  # Incompatible with formatting
  "ISC001",
  # Missing type annotations
  "ANN",
  # Conflict with ruff-format
    "COM812",
    "D10",  # Missing docstrings
    "ISC001", # Conflict with ruff-format
    "PD901", # df is a great name with functional data management
    "PLR0913",  # Too many arguments in function definition
    "RET504", # Don't force to calculate upon return
    "S101",  # Use of `assert` detected.
    "S301",  # pickle module is unsafe
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "PD011"]
"task_*.py" = ["ANN", "ARG001"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# ======================================================================================
# Miscellaneous tools configuration
# ======================================================================================


[tool.pytest.ini_options]
addopts = "--pdbcls=pdbp:Pdb"
filterwarnings = []
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]


[tool.yamlfix]
line_length = 88
none_representation = "null"
